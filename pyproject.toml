[tool.poetry]
name = "fgo-game-data-api"
version = "5.73.0"
description = "Provide raw and processed FGO game data"
authors = ["squaresmile <squaresmile@protonmail.com>"]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.70.0"
uvicorn = {extras = ["standard"], version = "^0.15.0"}
python-dotenv = "^0.19.1"
fuzzywuzzy = "^0.18.0"
python-Levenshtein = "^0.12.2"
orjson = "^3.6.4"
aiofiles = "^0.7.0"
GitPython = "^3.1.24"
toml = "^0.10.2"
SQLAlchemy = "^1.4.25"
psycopg2 = "^2.9.1"
httpx = "^0.19.0"
aioredis = { extras = ["hiredis"], version = "^2.0.0" }
asyncpg = "^0.24.0"
fastapi-limiter = { git = "https://github.com/long2ice/fastapi-limiter.git" }
fastapi-cache2 = "^0.1.6"
gunicorn = "^20.1.0"
setproctitle = "^1.2.2"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pylint = "^2.11.1"
mypy = "^0.910"
black = "^21.9b0"
pytest-xdist = "^2.4.0"
coverage = "^6.0.2"
fuzzywuzzy-stubs = "^0.0.1"
isort = "^5.9.3"
sqlalchemy2-stubs = "^0.0.2-alpha.17"
pytest-asyncio = "^0.15.1"
asgi-lifespan = "^1.0.1"
types-toml = "^0.10.1"
types-aiofiles = "^0.7.0"

[tool.isort]
line_length = 88
known_third_party = "orjson"
multi_line_output = 3
force_grid_wrap = 0
lines_after_imports = 2
combine_as_imports = true
include_trailing_comma = true

[tool.mypy]
plugins = "pydantic.mypy, sqlalchemy.ext.mypy.plugin"

follow_imports = "normal"
show_column_numbers = true

# mypy strict options
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["fastapi_cache.*"]
no_implicit_reexport = false
ignore_missing_imports = true

[tool.pylint.MASTER]
extension-pkg-whitelist = "orjson,pydantic"

[tool.pylint.'MESSAGES CONTROL']
disable = "duplicate-code,invalid-name,line-too-long,logging-fstring-interpolation,missing-docstring,no-else-return,raise-missing-from,too-few-public-methods,too-many-arguments,too-many-branches,too-many-instance-attributes,too-many-lines,too-many-locals,too-many-nested-blocks,too-many-statements,wrong-import-order"

[tool.pytest.ini_options]
filterwarnings = ["ignore:The explicit passing of coroutine objects to asyncio.wait():DeprecationWarning:starlette"]

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
